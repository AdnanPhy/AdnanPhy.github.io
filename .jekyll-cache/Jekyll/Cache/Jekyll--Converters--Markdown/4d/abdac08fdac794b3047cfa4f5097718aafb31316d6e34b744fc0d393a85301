I"?<p><a href="./another-page.html">Personal Page</a>.</p>

<p>My name is Adann.I am interested in learning more about the C++, Java, and Python programming languages, especially how they are used to web development under Unix/Linux-Environment using (X)Emacs, vim and gvim Text Editor as a IDE (Integrated Development Environment).. Wt, C++ Web Toolkit  and Python-Django-web framework.
<img src="/assets/images/gcc.png" alt="My helpful screenshot" /></p>
<h1 id="c-programe-and-g-compiler">C++ programe and g++-compiler</h1>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// cpp basic programe</span>
<span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="c1"> </span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="c1"> </span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span> 

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> 
<span class="p">{</span> 
  <span class="n">string</span> <span class="n">greeting</span> <span class="o">=</span> <span class="s">"Hello world!"</span><span class="p">;</span> 
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> 
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span> 
<span class="p">}</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>g++ sample.cpp
</code></pre></div></div>
<p>where <code class="language-plaintext highlighter-rouge">G++</code> is  the GNU Compiler for <code class="language-plaintext highlighter-rouge">C++</code>.</p>

<p>There should be whitespace between paragraphs.</p>

<p>There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project.</p>

<h1 id="wt-c-web-toolkit">Wt, C++ Web Toolkit</h1>

<p>This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.</p>

<h1 id="xemacs">(X)Emacs</h1>

<ul>
  <li>Emacs Commands. 
Emacs Shortcut Cheatsheet. C-x is <code class="language-plaintext highlighter-rouge">Ctrl+X</code>; M-x is usually <code class="language-plaintext highlighter-rouge">Alt+X</code>; S-x is <code class="language-plaintext highlighter-rouge">Shift+X</code>; and C-M-x is <code class="language-plaintext highlighter-rouge">Ctrl+Alt+X</code>. C-x means: hold Control and x at the same time.</li>
</ul>

<h3 id="xemacs-1">(X)Emacs</h3>

<ul>
  <li>Emacs Commands.
    <ul>
      <li>Emacs Shortcut Cheatsheet. C-x is <code class="language-plaintext highlighter-rouge">Ctrl+X</code>; M-x is usually <code class="language-plaintext highlighter-rouge">Alt+X</code>; S-x is <code class="language-plaintext highlighter-rouge">Shift+X</code>; and C-M-x is <code class="language-plaintext highlighter-rouge">Ctrl+Alt+X</code>. C-x means: hold Control and x at the same time.</li>
      <li>level 2 item
        <ul>
          <li>level 3 item</li>
          <li>level 3 item</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item</li>
      <li>level 2 item</li>
    </ul>
  </li>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item</li>
    </ul>
  </li>
  <li>level 1 item</li>
</ul>

<h6 id="commands">commands</h6>

<table>
  <tbody>
    <tr>
      <td>save file</td>
      <td>C-x C-s</td>
    </tr>
    <tr>
      <td>out of stock</td>
      <td>good and plenty</td>
    </tr>
    <tr>
      <td>ok</td>
      <td>good <code class="language-plaintext highlighter-rouge">oreos</code></td>
    </tr>
    <tr>
      <td>ok</td>
      <td>good <code class="language-plaintext highlighter-rouge">zoute</code> drop</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>JAVA Emacs-IDE
Here…</li>
  <li>C++ Emacs-IDE</li>
</ul>

<p><img src="/assets/images/emacscpp.gif" alt="My helpful screenshot" />
Here…
#Python Emacs-IDE
Here..
#Latex Emacs-IDE</p>

<h1 id="python-django-web-framework">Python-Django-web framework.</h1>

<h1 id="qt-creator-c">Qt Creator C++</h1>

<blockquote>
  <p>This is a blockquote following a header.</p>

  <p>When something is important enough, you do it even if the odds are not in your favor.</p>
</blockquote>

<h1 id="java">Java</h1>

<h1 id="javafx-openjfx">JavaFX-OpenJFX</h1>
<ul>
  <li>Command to install openjfx <code class="language-plaintext highlighter-rouge">apt install openjfx</code>.</li>
  <li>Compile JavaFx file command in Linux</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>javac  --module-path /path/to/openjavafx/lib --add-modules javafx.swing,javafx.graphics,javafx.fxml,javafx.media,javafx.controls HelloWorld.java
</code></pre></div></div>
<p>than run the command</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>java  --module-path /path/to/openjavafx/lib --add-modules javafx.swing,javafx.graphics,javafx.fxml,javafx.media,javafx.controls HelloWorld
</code></pre></div></div>
<p>where HelloWorld is the name of the java class file.</p>
<ul>
  <li>Example
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">javafx</span><span class="p">.</span><span class="nx">application</span><span class="p">.</span><span class="nx">Application</span><span class="p">;</span>
  <span class="k">import</span> <span class="nx">javafx</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">ActionEvent</span><span class="p">;</span>
  <span class="k">import</span> <span class="nx">javafx</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">EventHandler</span><span class="p">;</span>
  <span class="k">import</span> <span class="nx">javafx</span><span class="p">.</span><span class="nx">scene</span><span class="p">.</span><span class="nx">Scene</span><span class="p">;</span>
  <span class="k">import</span> <span class="nx">javafx</span><span class="p">.</span><span class="nx">scene</span><span class="p">.</span><span class="nx">control</span><span class="p">.</span><span class="nx">Button</span><span class="p">;</span>
  <span class="k">import</span> <span class="nx">javafx</span><span class="p">.</span><span class="nx">scene</span><span class="p">.</span><span class="nx">layout</span><span class="p">.</span><span class="nx">StackPane</span><span class="p">;</span>
  <span class="k">import</span> <span class="nx">javafx</span><span class="p">.</span><span class="nx">stage</span><span class="p">.</span><span class="nx">Stage</span><span class="p">;</span>
     
  <span class="kr">public</span> <span class="kd">class</span> <span class="nx">HelloWorld</span> <span class="kd">extends</span> <span class="nx">Application</span> <span class="p">{</span>
      <span class="kr">public</span> <span class="kd">static</span> <span class="k">void</span> <span class="nx">main</span><span class="p">(</span><span class="nb">String</span><span class="p">[]</span> <span class="nx">args</span><span class="p">)</span> <span class="p">{</span>
          <span class="nx">launch</span><span class="p">(</span><span class="nx">args</span><span class="p">);</span>
      <span class="p">}</span>
        
      <span class="p">@</span><span class="nd">Override</span>
      <span class="kr">public</span> <span class="k">void</span> <span class="nx">start</span><span class="p">(</span><span class="nx">Stage</span> <span class="nx">primaryStage</span><span class="p">)</span> <span class="p">{</span>
          <span class="nx">primaryStage</span><span class="p">.</span><span class="nx">setTitle</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hello World!</span><span class="dl">"</span><span class="p">);</span>
          <span class="nx">Button</span> <span class="nx">btn</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Button</span><span class="p">();</span>
          <span class="nx">btn</span><span class="p">.</span><span class="nx">setText</span><span class="p">(</span><span class="dl">"</span><span class="s2">Say 'Hello World'</span><span class="dl">"</span><span class="p">);</span>
          <span class="nx">btn</span><span class="p">.</span><span class="nx">setOnAction</span><span class="p">(</span><span class="k">new</span> <span class="nx">EventHandler</span><span class="o">&lt;</span><span class="nx">ActionEvent</span><span class="o">&gt;</span><span class="p">()</span> <span class="p">{</span>
     
              <span class="p">@</span><span class="nd">Override</span>
              <span class="kr">public</span> <span class="k">void</span> <span class="nx">handle</span><span class="p">(</span><span class="nx">ActionEvent</span> <span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
                  <span class="nx">System</span><span class="p">.</span><span class="nx">out</span><span class="p">.</span><span class="nx">println</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hello World!</span><span class="dl">"</span><span class="p">);</span>
              <span class="p">}</span>
          <span class="p">});</span>
            
          <span class="nx">StackPane</span> <span class="nx">root</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">StackPane</span><span class="p">();</span>
          <span class="nx">root</span><span class="p">.</span><span class="nx">getChildren</span><span class="p">().</span><span class="nx">add</span><span class="p">(</span><span class="nx">btn</span><span class="p">);</span>
          <span class="nx">primaryStage</span><span class="p">.</span><span class="nx">setScene</span><span class="p">(</span><span class="k">new</span> <span class="nx">Scene</span><span class="p">(</span><span class="nx">root</span><span class="p">,</span> <span class="mi">300</span><span class="p">,</span> <span class="mi">250</span><span class="p">));</span>
          <span class="nx">primaryStage</span><span class="p">.</span><span class="nx">show</span><span class="p">();</span>
      <span class="p">}</span>
  <span class="p">}</span>
</code></pre></div>    </div>
    <p><img src="/assets/images/javafx.png" alt="My helpful screenshot" /></p>
  </li>
</ul>

<h1 id="linux--console-commands">Linux  console commands</h1>

<h1 id="github-commands">GitHub commands</h1>

<p>#Latex</p>

<h3 id="header-3">Header 3</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Javascript code with syntax highlighting.</span>
<span class="kd">var</span> <span class="nx">fun</span> <span class="o">=</span> <span class="kd">function</span> <span class="nx">lang</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">dateformat</span><span class="p">.</span><span class="nx">i18n</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">./lang/</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">l</span><span class="p">)</span>
  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Ruby code with syntax highlighting</span>
<span class="no">GitHubPages</span><span class="o">::</span><span class="no">Dependencies</span><span class="p">.</span><span class="nf">gems</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">gem</span><span class="p">,</span> <span class="n">version</span><span class="o">|</span>
  <span class="n">s</span><span class="p">.</span><span class="nf">add_dependency</span><span class="p">(</span><span class="n">gem</span><span class="p">,</span> <span class="s2">"= </span><span class="si">#{</span><span class="n">version</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<h4 id="header-4">Header 4</h4>

<ul>
  <li>This is an unordered list following a header.</li>
  <li>This is an unordered list following a header.</li>
  <li>This is an unordered list following a header.</li>
</ul>

<h5 id="header-5">Header 5</h5>

<ol>
  <li>This is an ordered list following a header.</li>
  <li>This is an ordered list following a header.</li>
  <li>This is an ordered list following a header.</li>
</ol>

<h6 id="header-6">Header 6</h6>

<table>
  <thead>
    <tr>
      <th style="text-align: left">head1</th>
      <th style="text-align: left">head two</th>
      <th style="text-align: left">three</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">ok</td>
      <td style="text-align: left">good swedish fish</td>
      <td style="text-align: left">nice</td>
    </tr>
    <tr>
      <td style="text-align: left">out of stock</td>
      <td style="text-align: left">good and plenty</td>
      <td style="text-align: left">nice</td>
    </tr>
    <tr>
      <td style="text-align: left">ok</td>
      <td style="text-align: left">good <code class="language-plaintext highlighter-rouge">oreos</code></td>
      <td style="text-align: left">hmm</td>
    </tr>
    <tr>
      <td style="text-align: left">ok</td>
      <td style="text-align: left">good <code class="language-plaintext highlighter-rouge">zoute</code> drop</td>
      <td style="text-align: left">yumm</td>
    </tr>
  </tbody>
</table>

<h3 id="theres-a-horizontal-rule-below-this">There’s a horizontal rule below this.</h3>

<hr />

<h3 id="here-is-an-unordered-list">Here is an unordered list:</h3>

<ul>
  <li>Item foo</li>
  <li>Item bar</li>
  <li>Item baz</li>
  <li>Item zip</li>
</ul>

<h3 id="and-an-ordered-list">And an ordered list:</h3>

<ol>
  <li>Item one</li>
  <li>Item two</li>
  <li>Item three</li>
  <li>Item four</li>
</ol>

<h3 id="and-a-nested-list">And a nested list:</h3>

<ul>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item
        <ul>
          <li>level 3 item</li>
          <li>level 3 item</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item</li>
      <li>level 2 item</li>
    </ul>
  </li>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item</li>
    </ul>
  </li>
  <li>level 1 item</li>
</ul>

<h3 id="small-image">Small image</h3>

<p><img src="https://github.githubassets.com/images/icons/emoji/octocat.png" alt="Octocat" /></p>

<h3 id="large-image">Large image</h3>

<p><img src="https://guides.github.com/activities/hello-world/branching.png" alt="Branching" />
<img src="https://www.youtube.com/watch?v=1RHLB-V1M7E" alt="Branching" /></p>

<h3 id="definition-lists-can-be-used-with-html-syntax">Definition lists can be used with HTML syntax.</h3>

<dl>
<dt>Name</dt>
<dd>Godzilla</dd>
<dt>Born</dt>
<dd>1952</dd>
<dt>Birthplace</dt>
<dd>Japan</dd>
<dt>Color</dt>
<dd>Green</dd>
</dl>

<p><img src="/assets/images/logo.png" alt="My helpful screenshot" /></p>

<p>… you can <a href="/assets/image/documents.pdf">get the PDF</a> directly.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The final element.
</code></pre></div></div>
:ET